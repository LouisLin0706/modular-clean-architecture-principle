apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.mercarilite"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
    signingConfigs {
        def keystorePropertiesFile = file("keystore.properties")
        def keystoreProperties = new Properties()
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
        release {
            storeFile file(file("relese.keystore"))
            storePassword keystoreProperties['STORE_PASSWORD_RELEASE']
            keyAlias keystoreProperties['KEYSTORE_ALIAS_RELEASE']
            keyPassword keystoreProperties['KEYSTORE_PASSWORD_RELEASE']
            v1SigningEnabled true
            v2SigningEnabled true
        }
        debug {
            storeFile file(file("debug.keystore"))
            storePassword keystoreProperties['STORE_PASSWORD_DEBUG']
            keyAlias keystoreProperties['KEYSTORE_ALIAS_DEBUG']
            keyPassword keystoreProperties['KEYSTORE_PASSWORD_DEBUG']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            debuggable false
        }

        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
            debuggable true
            ext.enableCrashlytics = false
            ext.alwaysUpdateBuildId = false
            splits.abi.enable = false
            splits.density.enable = false
            crunchPngs false
        }
    }

    productFlavors {
        flavorDimensions "default"
        staging {
        }
        production {
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':core')
    implementation project(':feature_home')
    implementation project(':feature_info')
}
